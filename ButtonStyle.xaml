<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    <ControlTemplate x:Key="buttonTemplate" TargetType="{x:Type Button}">
        <Grid>
            <Ellipse Name="el1" Fill="Orange" Width="100" Height="70">
            </Ellipse>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Button.IsMouseOver" Value="True">
                <Setter TargetName="el1" Property="Fill" Value="Yellow"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
     <!-- Not Used!
     <Style x:Key="DialogButtonStyle" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Ellipse Name="el2" Fill="{TemplateBinding Background}" Width="100" Height="70" 
                             HorizontalAlignment="Center" VerticalAlignment="Center" 
                             Stroke="{TemplateBinding BorderBrush}"/>
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsMouseOver" Value="True" >
                            <Setter TargetName="el2" Property="Cursor" Value="Hand"/>
                            <Setter TargetName="el2" Property="Fill" Value="DarkGray"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>

        </Setter>
        
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontWeight" Value="Medium"/>
    </Style>
    
    -->

    <Style x:Key="RoundButtonTemplate" TargetType="Button">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                    <GradientStop Color="Black" Offset="1"/>
                    <GradientStop Color="#FF509342"/>
                    <GradientStop Color="#FF9DFBCC" Offset="0.696"/>
                    <GradientStop Color="#FF025F2F" Offset="0.887"/>
                </LinearGradientBrush>

            </Setter.Value>
        </Setter>
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Foreground" Value="DarkBlue" />
        <Setter Property="Background" Value="#FF7A7A7A" />
        <Setter Property="FontFamily" Value="Verdana" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="Height" Value="55" />
        <Setter Property="Width" Value="55" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="5" Background="{TemplateBinding Background}"
                                BorderThickness="1">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">
                        </ContentPresenter>
                        <Border.Effect>
                            <DropShadowEffect Color="Black" Opacity=".50" ShadowDepth="4" BlurRadius="5" RenderingBias="Quality" />
                        </Border.Effect>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsMouseOver" Value="True" >
                            <Setter  Property="Cursor" Value="Hand"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!-- When the Button is pressed, apply the drop shadow. -->
            <Trigger Property="IsPressed" Value="true">
                <Setter Property = "BitmapEffect" >
                    <Setter.Value>
                        <DropShadowBitmapEffect Color="Black" Direction="320"  
                                        ShadowDepth="25" Softness="1" Opacity="0.5"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="RoundButtonTemplate2" TargetType="Button">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                    <GradientStop Color="Black" Offset="1"/>
                    <GradientStop Color="#FF509342"/>
                    <GradientStop Color="#FF9DFBCC" Offset="0.696"/>
                    <GradientStop Color="#FF025F2F" Offset="0.887"/>
                </LinearGradientBrush>

            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="FontFamily" Value="Verdana" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Width" Value="55" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Margin" Value="0,0,0,-25"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="5" Background="{TemplateBinding Background}"
                                BorderThickness="1">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">
                        </ContentPresenter>
                        <Border.Effect>
                            <DropShadowEffect Color="Black" Opacity=".50" ShadowDepth="4" BlurRadius="5" RenderingBias="Quality" />
                        </Border.Effect>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsMouseOver" Value="True" >
                            <Setter  Property="Cursor" Value="Hand"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!-- When the Button is pressed, apply the drop shadow. -->
            <Trigger Property="IsPressed" Value="true">
                <Setter Property = "BitmapEffect" >
                    <Setter.Value>
                        <DropShadowBitmapEffect Color="Black" Direction="320"  
                                        ShadowDepth="25" Softness="1" Opacity="0.5"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="RoundButton_one" TargetType="Button" >
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="FontFamily" Value="Verdana" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Width" Value="100" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="8" Background="{TemplateBinding Background}"
                                BorderThickness="1">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">
                        </ContentPresenter>
                        <Border.Effect>
                            <DropShadowEffect Color="Black" Opacity=".50" ShadowDepth="4" BlurRadius="5" RenderingBias="Quality" />
                        </Border.Effect>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsMouseOver" Value="True" >
                            <Setter  Property="Cursor" Value="Hand"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!-- When the Button is pressed, apply the drop shadow. -->
            <Trigger Property="IsPressed" Value="true">
                <Setter Property = "BitmapEffect" >
                    <Setter.Value>
                        <DropShadowBitmapEffect Color="Black" Direction="320"  
                                        ShadowDepth="25" Softness="1" Opacity="0.5"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="ButtonStartTemplate" TargetType="Button">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="Black" Offset="1"/>
                    <GradientStop Color="#FF509342"/>
                    <GradientStop Color="#FF9DFBCC" Offset="0.696"/>
                    <GradientStop Color="#FF025F2F" Offset="0.887"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="DarkRed" />
        <Setter Property="FontFamily" Value="Verdana" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Height" Value="60" />
        <Setter Property="Width" Value="60" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Margin" Value="0,0,0,-25"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="5" Background="{TemplateBinding Background}"
                                BorderThickness="1">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">
                        </ContentPresenter>
                        <Border.Effect>
                            <DropShadowEffect Color="Black" Opacity=".50" ShadowDepth="4" BlurRadius="5" RenderingBias="Quality" />
                        </Border.Effect>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!-- When the Button is pressed, apply the drop shadow. -->
            <Trigger Property="IsPressed" Value="true">
                <Setter Property = "BitmapEffect" >
                    <Setter.Value>
                        <DropShadowBitmapEffect Color="Black" Direction="320"  
                                        ShadowDepth="25" Softness="1" Opacity="0.5"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ButtonStopTemplate" TargetType="Button">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                    <GradientStop Color="Black" Offset="1.3"/>
                    <GradientStop Color="#FFFFA000"/>
                    <GradientStop Color="#FFDE9E0A" Offset="0.757"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="FontFamily" Value="Verdana" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Height" Value="60" />
        <Setter Property="Width" Value="60" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Margin" Value="0,0,0,-25"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="5" Background="{TemplateBinding Background}"
                                BorderThickness="1" BorderBrush="#FF646464">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">
                        </ContentPresenter>
                        <Border.Effect>
                            <DropShadowEffect Color="Black" Opacity=".50" ShadowDepth="4" BlurRadius="5" RenderingBias="Quality" />
                        </Border.Effect>
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!-- When the Button is pressed, apply the drop shadow. -->
            <Trigger Property="IsPressed" Value="true">
                <Setter Property = "BitmapEffect" >
                    <Setter.Value>
                        <DropShadowBitmapEffect Color="Black" Direction="320"  
                                        ShadowDepth="25" Softness="1" Opacity="0.5"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>


    <!-- from sample app. -->

    <Color x:Key="backgroundColor1" A="225" R ="0" G="133" B="209"/>
    <Color x:Key="backgroundColor2" A="225" R ="0" G="61" B="94"/>
    <Color x:Key="MouseOverbackgroundColor1" A="225" R ="0" G="156" B="231"/>
    <Color x:Key="MouseOverbackgroundColor2" A="225" R ="0" G="91" B="155"/>
    <Color x:Key="MousePressedbackgroundColor1" A="225" R ="0" G="98" B="195"/>
    <Color x:Key="MousePressedbackgroundColor2" A="225" R ="0" G="36" B="72"/>
    <Color x:Key="IsNotEnablebackgroundColor1" A="225" R ="223" G="223" B="223"/>
    <Color x:Key="IsNotEnablebackgroundColor2" A="225" R ="240" G="240" B="240"/>
    <SolidColorBrush x:Key="BorderBrush" Color="#B7B7B7"/>

    <Style x:Key="TestButton" TargetType="Button">
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="t" 
                            Margin="{TemplateBinding Margin}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="6">
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStop x:Name="BackgroundGradientStop1" Offset="0" Color="{StaticResource backgroundColor1}"/>
                                    <GradientStop x:Name="BackgroundGradientStop2" Offset="1" Color="{StaticResource backgroundColor2}"/>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Border.Background>
                        <ContentPresenter Name="contentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalAlignment}"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard  x:Name="DisabledAnimation">
                                        <ColorAnimation Storyboard.TargetName="BackgroundGradientStop1"
                                                        Storyboard.TargetProperty="Color"
                                                        To="{StaticResource IsNotEnablebackgroundColor1}"
                                                        Duration="0"/>
                                        <ColorAnimation Storyboard.TargetName="BackgroundGradientStop2"
                                                        Storyboard.TargetProperty="Color"
                                                        To="{StaticResource IsNotEnablebackgroundColor2}"
                                                        Duration="0"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard  x:Name="EnbleAnimation">
                                        <ColorAnimation Storyboard.TargetName="BackgroundGradientStop1"
                                                        Storyboard.TargetProperty="Color"
                                                        To="{StaticResource backgroundColor1}"
                                                        Duration="0"/>
                                        <ColorAnimation Storyboard.TargetName="BackgroundGradientStop2"
                                                        Storyboard.TargetProperty="Color"
                                                        To="{StaticResource backgroundColor2}"
                                                        Duration="0"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>

                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard x:Name="MouseOverAnimation">
                                        <ColorAnimation Storyboard.TargetName="BackgroundGradientStop1"
                                                        Storyboard.TargetProperty="Color"
                                                        To="{StaticResource MouseOverbackgroundColor1}"
                                                        Duration = "0:0:0:1"/>
                                        <ColorAnimation Storyboard.TargetName="BackgroundGradientStop2"
                                                        Storyboard.TargetProperty="Color"
                                                        To="{StaticResource MouseOverbackgroundColor2}"
                                                        Duration = "0:0:0:1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard x:Name="MouseOutAnimation" FillBehavior="Stop">
                                        <ColorAnimation Storyboard.TargetName="BackgroundGradientStop1"
                                                        Storyboard.TargetProperty="Color"
                                                        To="{StaticResource backgroundColor1}"
                                                        Duration = "0:0:0:1"/>
                                        <ColorAnimation Storyboard.TargetName="BackgroundGradientStop2"
                                                        Storyboard.TargetProperty="Color"
                                                        To="{StaticResource backgroundColor2}"
                                                        Duration = "0:0:0:1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="IsPressed" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard x:Name="MouseDownAnimation">
                                        <ColorAnimation Storyboard.TargetName="BackgroundGradientStop1"
                                                        Storyboard.TargetProperty="Color"
                                                        To="{StaticResource MousePressedbackgroundColor1}"
                                                        Duration = "0:0:0:1"/>
                                        <ColorAnimation Storyboard.TargetName="BackgroundGradientStop2"
                                                        Storyboard.TargetProperty="Color"
                                                        To="{StaticResource MousePressedbackgroundColor2}"
                                                        Duration = "0:0:0:1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard x:Name="MouseUpAnimation" FillBehavior="Stop">
                                        <ColorAnimation Storyboard.TargetName="BackgroundGradientStop1"
                                                        Storyboard.TargetProperty="Color"
                                                        To="{StaticResource MouseOverbackgroundColor1}"
                                                        Duration = "0:0:0:1"/>
                                        <ColorAnimation Storyboard.TargetName="BackgroundGradientStop2"
                                                        Storyboard.TargetProperty="Color"
                                                        To="{StaticResource MouseOverbackgroundColor2}"
                                                        Duration = "0:0:0:1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="MidSizeLabel" TargetType="Label">
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Right"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,2,0"/>
        <Setter Property="Height" Value="34" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Background" >
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="Black" Offset="1"/>
                    <GradientStop Color="#FFF0F0F0" Offset="0.776"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="AnimatedSwitch" TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Background" Value="#FAFAFB" />
        <Setter Property="BorderBrush" Value="#EAEAEB" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Viewbox Stretch="Uniform">
                        <Canvas Name="Layer_1" Width="20" Height="20" Canvas.Left="10" Canvas.Top="0">
                            <Ellipse  Canvas.Left="0" Width="20" Height="20" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="0.5"/>
                            <Ellipse  Canvas.Left="15" Width="20" Height="20" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="0.5"/>
                            <Border Canvas.Left="10" Width="15" Height="20" Name="rect416927" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0.5,0,0.5"/>
                            <Ellipse x:Name="ellipse"  Canvas.Left="0" Width="20" Height="20" Fill="White" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="0.3">
                                <Ellipse.RenderTransform>
                                    <TranslateTransform X="0" Y="0" />
                                </Ellipse.RenderTransform>
                                <Ellipse.BitmapEffect>
                                    <DropShadowBitmapEffect Softness="0.1" ShadowDepth="0.7" Direction="270" Color="#BBBBBB"/>
                                </Ellipse.BitmapEffect>
                            </Ellipse>
                        </Canvas>
                    </Viewbox>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True" >
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="Background.Color" To="#52D468" Duration="0:0:0.2" />
                                        <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" To="#41C955" Duration="0:0:0.2" />
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Ellipse.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="ellipse">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <SplineDoubleKeyFrame KeyTime="0:0:0.4" Value="15" KeySpline="0, 1, 0.6, 1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="Background.Color" To="#FAFAFB" Duration="0:0:0.2" />
                                        <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" To="#EAEAEB" Duration="0:0:0.2" />
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Ellipse.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="ellipse">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="15"/>
                                            <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="0" KeySpline="0, 0.5, 0.5, 1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="toggleStyle" TargetType="{x:Type ToggleButton}">
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="Content">
                    <Setter.Value>
                        Off
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsChecked" Value="{x:Null}">
                <Setter Property="Content">
                    <Setter.Value>
                        Auto
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Content">
                    <Setter.Value>
                        On
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="RadioButton" x:Key="RadioButtonOne">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="AntiqueWhite" />
        <Setter Property="Height" Value="auto" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1.6" ScaleY="1.6"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="Background" Value="Blue" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Opacity" Value="1" />
            </Trigger>
            <Trigger Property="IsChecked" Value="false">
                <Setter Property="Foreground" Value="AntiqueWhite" />
                <Setter Property="Opacity" Value="0.3" />
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="SquareButton" TargetType="Button"> 
        <Setter Property="FontFamily"
            Value="Arial Narrow" />
        <Setter Property="FontSize"
            Value="13" />
        <Setter Property="Width" Value="70"/>
        <Setter Property="Height" Value="70"/>
        <Setter Property="Margin" Value="3"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border" Background="#FFDAC7C7">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MyButton"  TargetType="Button" >
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border CornerRadius="5" Background="{TemplateBinding Background}" Name="button" Width="auto">
                        <Grid>
                            <Border BorderThickness="1,0,1,1" BorderBrush="Black" 
                                CornerRadius="{Binding ElementName=button, Path=CornerRadius}">
                                <Border.Effect>
                                    <BlurEffect Radius="2" KernelType="Gaussian"/>
                                </Border.Effect>
                            </Border>
                            <Border BorderThickness="0,1,0,0" BorderBrush="White" Margin="2" Opacity="0.7" 
                                CornerRadius="{Binding ElementName=button, Path=CornerRadius}">
                                <Border.Effect>
                                    <BlurEffect Radius="2" KernelType="Gaussian"/>
                                </Border.Effect>
                            </Border>
                            <ContentPresenter TextBlock.FontSize="{TemplateBinding FontSize}" 
                                   TextBlock.FontFamily="{TemplateBinding FontFamily}" 
                                   TextBlock.Foreground="{TemplateBinding Foreground}" 
                                   VerticalAlignment="Center" HorizontalAlignment="Center" 
                                   Content="{TemplateBinding Content}"></ContentPresenter>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="#FF965F40" />
        <Setter Property="Foreground" Value="AntiqueWhite" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontFamily" Value="Consolas" />
    </Style>

    <Style x:Key="ButtonStart" TargetType="Button">
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Background" Value="#FF025F2F" />
        <Setter Property="Foreground" Value="AntiqueWhite" />
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border CornerRadius="5" Background="{TemplateBinding Background}" Name="button" Width="65" Height="60">
                        <Grid>
                            <Border BorderThickness="1,0,1,1" BorderBrush="Black" 
                                    CornerRadius="{Binding ElementName=button, Path=CornerRadius}">
                                <Border.Effect>
                                    <BlurEffect Radius="2" KernelType="Gaussian"/>
                                </Border.Effect>
                            </Border>
                            <Border BorderThickness="0,1,0,0" BorderBrush="White" Margin="2" Opacity="0.7" 
                                    CornerRadius="{Binding ElementName=button, Path=CornerRadius}">
                                <Border.Effect>
                                    <BlurEffect Radius="2" KernelType="Gaussian"/>
                                </Border.Effect>
                            </Border>
                            <ContentPresenter TextBlock.FontSize="{TemplateBinding FontSize}" 
                                           TextBlock.FontFamily="{TemplateBinding FontFamily}" 
                                           TextBlock.Foreground="{TemplateBinding Foreground}" 
                                           VerticalAlignment="Center" HorizontalAlignment="Center" 
                                           Content="{TemplateBinding Content}"></ContentPresenter>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!-- When the Button is pressed, apply the drop shadow. -->
            <Trigger Property="IsPressed" Value="true">
                <Setter Property = "BitmapEffect" >
                    <Setter.Value>
                        <DropShadowBitmapEffect Color="Black" Direction="320"  
                                    ShadowDepth="25" Softness="1" Opacity="0.5"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="ButtonStop" TargetType="Button">
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Background" Value="#FF9C511D" />
        <Setter Property="Foreground" Value="AntiqueWhite" />
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border CornerRadius="5" Background="{TemplateBinding Background}" Name="button"  Width="65" Height="60">
                        <Grid>
                            <Border BorderThickness="1,0,1,1" BorderBrush="Black" 
                                    CornerRadius="{Binding ElementName=button, Path=CornerRadius}">
                                <Border.Effect>
                                    <BlurEffect Radius="2" KernelType="Gaussian"/>
                                </Border.Effect>
                            </Border>
                            <Border BorderThickness="0,1,0,0" BorderBrush="White" Margin="2" Opacity="0.7" 
                                    CornerRadius="{Binding ElementName=button, Path=CornerRadius}">
                                <Border.Effect>
                                    <BlurEffect Radius="2" KernelType="Gaussian"/>
                                </Border.Effect>
                            </Border>
                            <ContentPresenter TextBlock.FontSize="{TemplateBinding FontSize}" 
                       TextBlock.FontFamily="{TemplateBinding FontFamily}" 
                       TextBlock.Foreground="{TemplateBinding Foreground}" 
                       VerticalAlignment="Center" HorizontalAlignment="Center" 
                       Content="{TemplateBinding Content}"></ContentPresenter>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!-- When the Button is pressed, apply the drop shadow. -->
            <Trigger Property="IsPressed" Value="true">
                <Setter Property = "BitmapEffect" >
                    <Setter.Value>
                        <DropShadowBitmapEffect Color="Black" Direction="320"  
                                    ShadowDepth="25" Softness="1" Opacity="0.5"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>



    <Style x:Key="ButtonOne" TargetType="Button">
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Background" Value="#FF5194A8" />
        <Setter Property="Foreground" Value="AntiqueWhite" />
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border CornerRadius="5" Background="{TemplateBinding Background}" Name="button"  Width="auto" Height="auto">
                        <Grid>
                            <Border BorderThickness="1,0,1,1" BorderBrush="Black" 
                                CornerRadius="{Binding ElementName=button, Path=CornerRadius}">
                                <Border.Effect>
                                    <BlurEffect Radius="2" KernelType="Gaussian"/>
                                </Border.Effect>
                            </Border>
                            <Border BorderThickness="0,1,0,0" BorderBrush="White" Margin="2" Opacity="0.7" 
                                CornerRadius="{Binding ElementName=button, Path=CornerRadius}">
                                <Border.Effect>
                                    <BlurEffect Radius="2" KernelType="Gaussian"/>
                                </Border.Effect>
                            </Border>
                            <ContentPresenter TextBlock.FontSize="{TemplateBinding FontSize}" 
                   TextBlock.FontFamily="{TemplateBinding FontFamily}" 
                   TextBlock.Foreground="{TemplateBinding Foreground}" 
                   VerticalAlignment="Center" HorizontalAlignment="Center" 
                   Content="{TemplateBinding Content}"></ContentPresenter>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!-- When the Button is pressed, apply the drop shadow. -->
            <Trigger Property="IsPressed" Value="true">
                <Setter Property = "BitmapEffect" >
                    <Setter.Value>
                        <DropShadowBitmapEffect Color="Black" Direction="320"  
                                ShadowDepth="25" Softness="1" Opacity="0.5"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>



</ResourceDictionary>
